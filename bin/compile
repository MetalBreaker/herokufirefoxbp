#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/profile/* $BUILD_DIR/.profile.d/
mkdir -p $BUILD_DIR/sources.list.d
cp $BP_DIR/sources/* $BUILD_DIR/sources.list.d/

source $BP_DIR/lib/utils

export_env_dir $ENV_DIR

apt_install libxpm4 libxrender1 libgtk2.0-0 libnss3 libgconf-2-4 gtk2-engines-pixbuf xvfb x11-xkb-utils xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic libxfont1 libnotify4 libxss1 libglu1-mesa libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa  firefox

# symlink libs to where Xvfb searches
ln -s /lib/x86_64-linux-gnu/libudev.so.1 $BUILD_DIR/.apt/usr/lib/libudev.so.0
ln -s /app/.apt/usr/lib/x86_64-linux-gnu/libXfont.so.1 $BUILD_DIR/.apt/usr/lib/libXfont.so.1

# patch Xvfb to use /app/.. paths instead of hardcoded wrong values
sed -i.bak s/usr\\/bin/app\\/ubi/g $BUILD_DIR/.apt/usr/bin/Xvfb
sed -i.bak s/usr\\/share\\/fonts/app\\/usr-s-fonts/g $BUILD_DIR/.apt/usr/bin/Xvfb
# create symlinks for Xvfb to use /app/.apt/usr/...
ln -s /app/.apt/usr/bin $BUILD_DIR/ubi
ln -s /app/.apt/usr/share/fonts $BUILD_DIR/usr-s-fonts

# run mkfontdir with binaries from inside dyno
export PATH="$PATH:$BUILD_DIR/.apt/usr/bin"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$BUILD_DIR/.apt/usr/lib:$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu"
find $BUILD_DIR/.apt/usr/share/fonts/X11 -type d | xargs $BUILD_DIR/.apt/usr/bin/mkfontdir